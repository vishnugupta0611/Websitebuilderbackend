# Generated by Django 5.2.4 on 2025-07-29 05:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('isVerified', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=100)),
                ('product_name', models.CharField(max_length=200)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_image', models.URLField(blank=True)),
                ('product_sku', models.CharField(max_length=100)),
                ('quantity', models.IntegerField(default=1)),
                ('websiteSlug', models.CharField(max_length=200)),
                ('websiteId', models.CharField(max_length=100)),
                ('websiteName', models.CharField(max_length=200)),
                ('addedAt', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('business', 'Business'), ('ecommerce', 'E-commerce'), ('portfolio', 'Portfolio'), ('blog', 'Blog'), ('restaurant', 'Restaurant'), ('other', 'Other')], max_length=50)),
                ('logoUrl', models.URLField(blank=True)),
                ('template_id', models.CharField(default='default', max_length=100)),
                ('template_name', models.CharField(default='Default Template', max_length=200)),
                ('template_metadata', models.JSONField(default=dict)),
                ('heroTitle', models.CharField(blank=True, max_length=200)),
                ('heroDescription', models.TextField(blank=True)),
                ('heroImage', models.URLField(blank=True)),
                ('heroButtonText', models.CharField(blank=True, max_length=100)),
                ('productSectionTitle', models.CharField(blank=True, max_length=200)),
                ('blogSectionTitle', models.CharField(blank=True, max_length=200)),
                ('services', models.JSONField(default=list)),
                ('contentBlocks', models.JSONField(default=list)),
                ('theme', models.JSONField(default=dict)),
                ('customizations', models.JSONField(default=dict)),
                ('companyStory', models.TextField(blank=True)),
                ('whyCreated', models.TextField(blank=True)),
                ('mission', models.TextField(blank=True)),
                ('vision', models.TextField(blank=True)),
                ('features', models.JSONField(default=list)),
                ('teamInfo', models.JSONField(default=list)),
                ('contactInfo', models.JSONField(default=dict)),
                ('seoTitle', models.CharField(blank=True, max_length=200)),
                ('seoDescription', models.TextField(blank=True)),
                ('seoKeywords', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('websiteSlug', models.CharField(max_length=200)),
                ('websiteName', models.CharField(max_length=200)),
                ('items', models.JSONField(default=list)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customerName', models.CharField(max_length=200)),
                ('customerEmail', models.EmailField(max_length=254)),
                ('customerPhone', models.CharField(max_length=20)),
                ('customerAddress', models.TextField()),
                ('customerCity', models.CharField(max_length=100)),
                ('customerZipCode', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='builderapi.website')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('shortDescription', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('originalPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('category', models.CharField(max_length=100)),
                ('inventory', models.IntegerField(default=0)),
                ('sku', models.CharField(max_length=100)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('images', models.JSONField(default=list)),
                ('variants', models.JSONField(default=list)),
                ('seoTitle', models.CharField(blank=True, max_length=200)),
                ('seoDescription', models.TextField(blank=True)),
                ('seoKeywords', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('out_of_stock', 'Out of Stock')], default='active', max_length=20)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='builderapi.website')),
            ],
            options={
                'unique_together': {('website', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True)),
                ('featuredImage', models.URLField(blank=True)),
                ('author', models.CharField(max_length=200)),
                ('tags', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('publishDate', models.DateTimeField(blank=True, null=True)),
                ('template', models.JSONField(default=dict)),
                ('customizations', models.JSONField(default=dict)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to='builderapi.website')),
            ],
            options={
                'unique_together': {('website', 'slug')},
            },
        ),
    ]
